/**
 * boxjumper.java  12/5/2014
 *
 * @author - Aaron Conn
 * @author - Chris Best
 * @author - Preeti Singh
 * @version 1.00 13/5/2014
 *
 */

import java.awt.Graphics;
import java.awt.Color;
import java.awt.Canvas;
import java.awt.Rectangle;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.Timer;
import javax.swing.JFrame;

public class boxjumper extends Canvas
{
	private Timer timer; 
	private final static int SLEEP = 50;    //Delay in registering keypresses
	private int speed;                   //Movement speed (units moved each interval)
	private int level;                      //Level
	private int score;                      //Player score
	private int x;                       //x position
	private int y;                       //y position
	private int yVelocity;               //y velocity
	private boolean touchingPlatTop;        //If player is touching the top of the platform

	
    public boxjumper(KeyEvent event)
    {
    	      //work in progress
    	
    	//initialize variables
    	level = 1;
    	score = 0;
    	x = 0;
		y = 0;
	    	
	    //window size
	    setSize(1000,650);
		setVisible(true);
		
		//background color
		Color skyblue = new Color(0,191,255);
		setBackground(skyblue);
			
		//Timer
		ActionListener moveCaller = new ActionListener()
		{
			public void actionPerformed(ActionEvent event)
			{
					movementKeys();  //each time timer fires it will call movementKeys
					redraw();        //redraw the player
			}
		};
		timer = new Timer(SLEEP, moveCaller);
		timer.start();
	
    }
    
    //Player
    public void player()
    {
    	window.setColor(Color.RED);
    	window.fillRect(x,y,50,50);
    }
    
    //Movement
    public void movementKeys()
    {
    	if (event.getKeyCode() == KeyEvent.VK_UP)
    	{
    		jump(); //jump
    	}
    	if (event.getKeyCode() == KeyEvent.VK_LEFT)
    	{
    		x -= speed; //move left
    	}
    	if (event.getKeyCode() == KeyEvent.VK_RIGHT)
    	{
    		x += speed; //move right
    	}
    }
    
    public void redraw()
    {
    	player();
    }
    
    public void jump()
    {
    	if(touchingPlatTop)
    	{
    	    yVelocity = 9.9;
            while(!touchingPlatTop)
            {
            	yVelocity -= 0.5;
            	y += yVelocity;
            }
    	}
    }
    
    public boolean touchingPlatformTop()
    {
    	Rectangle c = new Rectangle(x,y,50,50);
    	if(c.intersects([top of any platform])
    		touchingPlatTop = true;
    	else
    		touchingPlatTop = false;
    }
}
